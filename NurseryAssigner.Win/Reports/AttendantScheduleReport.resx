<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="objectDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dw//H7xiAQPlbNK9AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="footerMessageText.SerializableRtfString" xml:space="preserve">
    <value>ewBcAHIAdABmADEAXABkAGUAZgBmADAAewBcAGYAbwBuAHQAdABiAGwAewBcAGYAMAAgAEMAYQBsAGkAYgByAGkAOwB9AHsAXABmADEAIABUAGkAbQBlAHMAIABOAGUAdwAgAFIAbwBtAGEAbgA7AH0AfQB7AFwAYwBvAGwAbwByAHQAYgBsACAAOwBcAHIAZQBkADAAXABnAHIAZQBlAG4AMABcAGIAbAB1AGUAMAAgADsAXAByAGUAZAAwAFwAZwByAGUAZQBuADAAXABiAGwAdQBlADIANQA1ACAAOwB9AHsAXAAqAFwAZABlAGYAYwBoAHAAIABcAGYAMQB9AHsAXABzAHQAeQBsAGUAcwBoAGUAZQB0ACAAewBcAHEAbABcAGYAMQAgAE4AbwByAG0AYQBsADsAfQB7AFwAKgBcAGMAcwAxAFwAZgAxAFwAYwBmADEAIABEAGUAZgBhAHUAbAB0ACAAUABhAHIAYQBnAHIAYQBwAGgAIABGAG8AbgB0ADsAfQB7AFwAKgBcAGMAcwAyAFwAcwBiAGEAcwBlAGQAbwBuADEAXABmADEAXABjAGYAMQAgAEwAaQBuAGUAIABOAHUAbQBiAGUAcgA7AH0AewBcACoAXABjAHMAMwBcAHUAbABcAGYAMQBcAGMAZgAyACAASAB5AHAAZQByAGwAaQBuAGsAOwB9AHsAXAAqAFwAdABzADQAXAB0AHMAcgBvAHcAZABcAGYAMQBcAHEAbABcAHQAcwBjAGUAbABsAHAAYQBkAGQAZgBsADMAXAB0AHMAYwBlAGwAbABwAGEAZABkAGwAMQAwADgAXAB0AHMAYwBlAGwAbABwAGEAZABkAGYAYgAzAFwAdABzAGMAZQBsAGwAcABhAGQAZABmAHIAMwBcAHQAcwBjAGUAbABsAHAAYQBkAGQAcgAxADAAOABcAHQAcwBjAGUAbABsAHAAYQBkAGQAZgB0ADMAXAB0AHMAdgBlAHIAdABhAGwAdABcAGMAbAB0AHgAbAByAHQAYgAgAE4AbwByAG0AYQBsACAAVABhAGIAbABlADsAfQB7AFwAKgBcAHQAcwA1AFwAdABzAHIAbwB3AGQAXABzAGIAYQBzAGUAZABvAG4ANABcAGYAMQBcAHEAbABcAHQAcgBiAHIAZAByAHQAXABiAHIAZAByAHMAXABiAHIAZAByAHcAMQAwAFwAdAByAGIAcgBkAHIAbABcAGIAcgBkAHIAcwBcAGIAcgBkAHIAdwAxADAAXAB0AHIAYgByAGQAcgBiAFwAYgByAGQAcgBzAFwAYgByAGQAcgB3ADEAMABcAHQAcgBiAHIAZAByAHIAXABiAHIAZAByAHMAXABiAHIAZAByAHcAMQAwAFwAdAByAGIAcgBkAHIAaABcAGIAcgBkAHIAcwBcAGIAcgBkAHIAdwAxADAAXAB0AHIAYgByAGQAcgB2AFwAYgByAGQAcgBzAFwAYgByAGQAcgB3ADEAMABcAHQAcwBjAGUAbABsAHAAYQBkAGQAZgBsADMAXAB0AHMAYwBlAGwAbABwAGEAZABkAGwAMQAwADgAXAB0AHMAYwBlAGwAbABwAGEAZABkAGYAcgAzAFwAdABzAGMAZQBsAGwAcABhAGQAZAByADEAMAA4AFwAdABzAHYAZQByAHQAYQBsAHQAXABjAGwAdAB4AGwAcgB0AGIAIABUAGEAYgBsAGUAIABTAGkAbQBwAGwAZQAgADEAOwB9AH0AewBcACoAXABsAGkAcwB0AG8AdgBlAHIAcgBpAGQAZQB0AGEAYgBsAGUAfQBcAG4AbwB1AGkAYwBvAG0AcABhAHQAXABzAHAAbAB5AHQAdwBuAGkAbgBlAFwAaAB0AG0AYQB1AHQAcwBwAFwAcwBlAGMAdABkAFwAcABhAHIAZABcAHAAbABhAGkAbgBcAHEAbABcAGYAMQBcAGMAZgAxAFwAcABhAHIAfQA=</value>
  </data>
</root>